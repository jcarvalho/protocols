package module.protocols.domain;

enum module.protocols.domain.util.ProtocolResponsibleType as ProtocolResponsibleType;
enum module.protocols.domain.ProtocolVisibilityType as ProtocolVisibilityType;

valueType module.protocols.domain.util.ProtocolAction as ProtocolAction {
    externalizeWith {
        String toString();
    }

    internalizeWith fromString();
}

valueType pt.utl.ist.fenix.tools.util.Strings as ProtocolsStrings {
    externalizeWith {
        String exportAsString();
    }
    internalizeWith pt.utl.ist.fenix.tools.util.Strings.importFromString();
}

class ProtocolManager {
	Long currentSequenceNumber;
}

class Protocol {
    String observations;
    ProtocolAction protocolAction;
    protected String protocolNumber;
    Boolean renewable;
    String scientificAreas;
    LocalDate signedDate;
    
    ProtocolVisibilityType visibilityType;
}

public class ProtocolFile extends .org.fenixedu.bennu.io.domain.GenericFile {
}

public class PersistentProtocolCreatorsGroup extends .org.fenixedu.bennu.core.domain.groups.PersistentGroup {
}

class ProtocolHistory {
	protected DateTime timestamp;
	LocalDate beginDate;
	LocalDate endDate;
}

class ProtocolResponsible {
	ProtocolResponsibleType type;
	ProtocolsStrings positionList;
}

class ProtocolAuthorizationGroup {
}

/* Relations */

relation ProtocolManagerBennu {
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	ProtocolManager playsRole protocolManager;
}

relation ProtocolManagerProtocols {
	ProtocolManager playsRole protocolManager {
		multiplicity 1..1;
	}
	Protocol playsRole protocols {
		multiplicity *;
	}
}

relation ProtocolManagerInternalOrganizationModel {
	ProtocolManager playsRole internalProtocolManager;
	.module.organization.domain.OrganizationalModel playsRole internalOrganizationalModel;
}

relation ProtocolManagerExternalOrganizationModel {
	ProtocolManager playsRole externalProtocolManager;
	.module.organization.domain.OrganizationalModel playsRole externalOrganizationalModel;
}

relation ProtocolManagerCreatorsGroup {
    protected ProtocolManager playsRole protocolManager {
        multiplicity 1..1;
    }
    protected PersistentProtocolCreatorsGroup playsRole creatorsGroup {
        multiplicity 1..1;
    }
}

// Protocols

relation ProtocolResponsibleProtocol {

	Protocol playsRole protocol;
	
	ProtocolResponsible playsRole protocolResponsible {
		multiplicity *;
	}
}

relation ProtocolResponsiblePerson {
	ProtocolResponsible playsRole protocolResponsible {
		multiplicity *;
	}
	.module.organization.domain.Person playsRole people {
		multiplicity *;
	}
}

relation ProtocolResponsibleUnit {
	ProtocolResponsible playsRole protocolResponsible {
		multiplicity *;
	}
	.module.organization.domain.Unit playsRole unit {
		multiplicity 1..1;
	}
}

relation ProtocolResponsibleCountry {
	ProtocolResponsible playsRole protocolResponsible {
		multiplicity *;
	}
	.module.geography.domain.Country playsRole country;
}

relation ProtocolHistoryProtocol {
	Protocol playsRole protocol {
		multiplicity 1..1;
	}
	ProtocolHistory playsRole protocolHistories {
		multiplicity *;
	}
}

/* Protocol-specific */

relation ProtocolAuthorizationGroupProtocol {
	Protocol playsRole writerProtocols {
		multiplicity *;
	}
	ProtocolAuthorizationGroup playsRole writerGroup;
}

relation ProtocolReaders {
	Protocol playsRole readerProtocols {
		multiplicity *;
	}
	protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole readerGroups {
		multiplicity *;
	}
}

/* Authorization Groups */

relation ProtocolAuthorizationGroupProtocolManager {
	ProtocolManager playsRole protocolManager {
		multiplicity 1..1;
	}
	ProtocolAuthorizationGroup playsRole protocolAuthorizationGroups {
		multiplicity *;
	}
}

relation ProtocolAuthorizationGroupWriterGroups {
	ProtocolAuthorizationGroup playsRole protocolAuthorizationGroupAllowedToWrite;
	protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole authorizedWriterGroup;
}

relation ProtocolAuthorizationGroupReaderGroups {
	ProtocolAuthorizationGroup playsRole protocolAuthorizationGroupAllowedToRead {
		multiplicity *;
	}
	protected .org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole authorizedReaderGroups {
		multiplicity *;
	}
}

/* Files */

relation ProtocolFilesNode {
	Protocol playsRole protocol {
	    multiplicity 1..1;
	}
	ProtocolFile playsRole protocolFile {
		multiplicity *;
	}
}
